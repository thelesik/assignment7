apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: myname
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
reclaimPolicy: Retain
allowVolumeExpansion: true
mountOptions:
  - debug
volumeBindingMode: Immediate


---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: first-pvc
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 8Gi
  storageClassName: myname


---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: data
  name: data
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.network/myapp: "true"
      io.kompose.service: data
  template:
    metadata:
      labels:
        io.kompose.network/myapp: "true"
        io.kompose.service: data
    spec:
      containers:
      - name: db
        image: thelesik/quotes-data:v1
        volumeMounts:
        - mountPath: "/var/lib/mysql"
          name: mypd
        env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: MYSQL_DATABASE
          value: mydatabase
        - name: MYSQL_PASSWORD
          value: root
        - name: MYSQL_ROOT_PASSWORD
          value: root
        ports:
        - containerPort: 3306
      restartPolicy: Always
      volumes:
        - name: mypd
          persistentVolumeClaim:
            claimName: first-pvc

---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: data
  name: data
spec:
  ports:
  - name: "3306"
    port: 3306
    targetPort: 3306
  selector:
    io.kompose.network/myapp: "true"
    io.kompose.service: data
